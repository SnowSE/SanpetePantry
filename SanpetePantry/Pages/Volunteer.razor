@page "/volunteer"
@using System.ComponentModel.DataAnnotations
@inject NavigationManager navManager
@inject IMailService mailService

<h1 style="font-family: 'Franklin Gothic Medium';" class="fw-bold text-center" >Volunteer</h1>

<div class="py-5">
    <h2 style="font-family: Gabriola;" class="text-center">We rely on and appreciate our Volunteers</h2>
</div>

<div class="container col col-xl-6">
    <div class="row">
        <div class="col">
            <img class="img-fluid" src="/img/VolunteerSolePicture.jpg" alt="Volunteers" />
        </div>
    </div>
    <div class="fs-5 pt-5">
        Our volunteers are the life blood of our efforts. Without their hard work and dedication we could never be able to serve all of
        the people that we serve. We are always looking for more talented and enthusiastic people who believe in our cause of 
        <span class="fst-italic">"Ending Hunger in Sanpete
        County!"</span>
    </div>
</div>

<h2 class="test-title">Hear Testimonies from our volunteers and employees!</h2>

<div class="vid-test">
    <div>
        <iframe src="https://drive.google.com/file/d/112J1r4xELGhmZD1za97_Ucca3trefXSS/preview" allow="autoplay"></iframe>
        <span class="name">Sister Weight</span>
        <p>"I love to serve people and help in any way that I can!"</p>
    </div>
    <div>
        <iframe src="https://drive.google.com/file/d/1WObEmKLfTaMLRkVSdrIjvYf_fa5uenT3/preview" allow="autoplay"></iframe>
        <span class="name">David</span>
        <p>"My co-workers are very good people, everybody is always trying to help!"</p>
    </div>
</div>

<div class="py-5">
    <h2 style="font-family: Gabriola;" class="text-center">Want To Volunteer? Contact Us</h2>
</div>

<div class="row">
    <div class="container col col-md-6" style="margin: auto;">
        <EditForm method="post" Enhance Model=@contactModel OnValidSubmit=@HandleValidSubmit FormName="volunteerForm">

            <label style="font-family: 'Franklin Gothic Medium';" class="form-label">Name:</label>
            <InputText @bind-Value=contactModel.Name class="form-control mb-3" />

            <label style="font-family: 'Franklin Gothic Medium';" class="form-label">Phone Number:</label>
            <InputText @bind-Value=contactModel.Phone class="form-control mb-3" />

            <label style="font-family: 'Franklin Gothic Medium';" class="form-label">Email:</label>
            <InputText @bind-Value=contactModel.Email class="form-control mb-3" />

            <label style="font-family: 'Franklin Gothic Medium';" class="form-label">What is your availability:</label>
            <InputTextArea @bind-Value=contactModel.Availability class="form-control mb-3" />

            <label style="font-family: 'Franklin Gothic Medium';" class="form-label">How would you like to volunteer:</label>
            <InputTextArea @bind-Value=contactModel.Ability class="form-control mb-3" />

            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="d-flex justify-content-center">
                <button type="submit" class="btn btn-outline-primary btn-lg">Send</button>
            </div>
        </EditForm>
    </div>
</div>

<style>
    .vid-test {
    display: flex;
    flex-direction: row;

    justify-content: center;
}

.vid-test div{
    flex: 0.4;

    display: flex;
    flex-direction: column;

    margin: 1em;

    align-items: center;
}

.vid-test div *{
    margin: 0.5em;
}

.name {
    font-size: 2em;
    font-weight: 600;

}

div p {
    font-size: 1.5em;
    font-weight: 300;
}

iframe {

    height: 20em;
    width: 100%;

}

.test-title {
    margin: 2em;
}
</style>

@code {
    [SupplyParameterFromForm]
    ExampleModel contactModel{ get; set; } = new();

    public class ExampleModel
    {
        [Required]
        [StringLength(256, ErrorMessage = "Name is too long.")]
        public string? Name { get; set; }
        [Phone]
        public string? Phone{get;set;}
        [EmailAddress]
        public string? Email{get;set;}
        [StringLength(2048,ErrorMessage ="Please limit your comments to 2,048 characters")]
        public string? Availability {get;set;}
        [StringLength(2048,ErrorMessage ="Please limit your comments to 2,048 characters")]
        public string? Ability {get;set;}
    }

    private async Task HandleValidSubmit()
    {
        string body = $"Contact Name: {contactModel.Name}<br />Contact Phone Number: {contactModel.Phone}<br />Contact Email: {contactModel.Email}<br /><br /><h3>Availability:</h3><br /><br />{contactModel.Availability}<br /><br /><h3>How they would like to Volunteer:</h3><br /><br />{contactModel.Ability}";
        await mailService.SendMessageAsync("volunteer@sanpetepantry.org", "volunteer@sanpetepantry.org", "Volunteer Page Email", body, (_) => {});
        navManager.NavigateTo("/thankyou");
    }
}