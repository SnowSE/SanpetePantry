@using System.ComponentModel.DataAnnotations
@inject NavigationManager navManager
@page "/volunteer"

<h1 style="font-family: 'Franklin Gothic Medium';" class="fw-bold text-center" >Volunteer</h1>

<div class="py-5">
    <h2 style="font-family: Gabriola;" class="text-center">We rely on and appreciate our Volunteers</h2>
</div>

<div class="container col col-xl-6">
    <div class="row">
        <div class="col">
            <img class="img-fluid" src="/img/Volunteers.png" alt="Volunteers" />
        </div>
        <div class="col">
            <img class="img-fluid" src="/img/TeamAndVolunteers.png" alt="Team and Volunteers" />
        </div>
    </div>            
    <div class="fs-5 pt-5">
        Our volunteers are the life blood of our efforts. Without their hard work and dedication we could never be able to serve all of 
        the people that we serve. We are always looking for more talented and enthusiastic people who believe in our cause of <span class="fst-italic">"Ending Hunger in Sanpete
        County!"</span>
    </div>
</div>

<div class="py-5">
    <h2 style="font-family: Gabriola;" class="text-center">Want To Volunteer? Contact Us</h2>
</div>

<div class="row">
    <div class="container col col-md-6" style="margin: auto;">
        <EditForm Model=@contactModel OnValidSubmit=@HandleValidSubmit>

            <label style="font-family: 'Franklin Gothic Medium';" class="form-label">Name:</label>
            <InputText @bind-Value=contactModel.Name class="form-control mb-3" />

            <label style="font-family: 'Franklin Gothic Medium';" class="form-label">Phone Number:</label>
            <InputText @bind-Value=contactModel.Phone class="form-control mb-3" />

            <label style="font-family: 'Franklin Gothic Medium';" class="form-label">Email:</label>
            <InputText @bind-Value=contactModel.Email class="form-control mb-3" />

            <label style="font-family: 'Franklin Gothic Medium';" class="form-label">What is your availability:</label>
            <InputTextArea @bind-Value=contactModel.Availability class="form-control mb-3" />

            <label style="font-family: 'Franklin Gothic Medium';" class="form-label">How would you like to volunteer:</label>
            <InputTextArea @bind-Value=contactModel.Ability class="form-control mb-3" />

            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="d-flex justify-content-center">
                <button type="submit" class="btn btn-outline-primary btn-lg">Send</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    ExampleModel contactModel = new();

    public class ExampleModel
    {
        [Required]
        [StringLength(256, ErrorMessage = "Name is too long.")]
        public string? Name { get; set; }
        [Phone]
        public string? Phone{get;set;}
        [EmailAddress]
        public string? Email{get;set;}
        [StringLength(2048,ErrorMessage ="Please limit your comments to 2,048 characters")]
        public string? Availability {get;set;}
        [StringLength(2048,ErrorMessage ="Please limit your comments to 2,048 characters")]
        public string? Ability {get;set;}
    }

    private void HandleValidSubmit()
    {
        string body = $"Contact Name: {contactModel.Name}<br />Contact Phone Number: {contactModel.Phone}<br />Contact Email: {contactModel.Email}<br /><br /><h3>Availability:</h3><br /><br />{contactModel.Availability}<br /><br /><h3>How they would like to Volunteer:</h3><br /><br />{contactModel.Ability}";

        using(MailMessage mail = new())
        {
            mail.From = new MailAddress("mrtannertrimble@gmail.com");
            mail.To.Add("mrtannertrimble@gmail.com");
            mail.Subject = "Volunteer Page Email";
            mail.Body = body;
            mail.IsBodyHtml = true;

            using(SmtpClient smtp = new SmtpClient("smtp.gmail.com", 587))
            {
                smtp.Credentials = new NetworkCredential("mrtannertrimble@gmail.com", "alma.soul77");
                smtp.EnableSsl = true;
                smtp.Send(mail);
            }
        }

        navManager.NavigateTo("/thankyou");
    }
}
